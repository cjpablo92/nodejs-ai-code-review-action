name: nodejs-ai-code-review"
description: "Analyze a Node.js PR diff using OpenAI and provide structured feedback."
author: cjpablo92
branding:
  icon: 'terminal'
  color: 'white'
runs:
  using: "composite"
  steps:
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y jq

    - name: Get diff
      run: |
        DIFF_OUTPUT=$(git diff ${{ inputs.base_sha }} ${{ inputs.head_sha }} -- '*.js' '*.ts' '*.jsx' '*.tsx' '*.json' '*.yml' '*.yaml' ':!node_modules' ':!dist' ':!package-lock.json')
        echo "DIFF=$DIFF_OUTPUT" >> $GITHUB_ENV

    - name: Create prompt
      run: |
        PROMPT="$(cat <<EOF
You are a super senior tech lead reviewing a pull request for a Node.js project.
Your job is to:
1. Identify any bugs or logical issues in the code.
2. Suggest improvements for best practices in coding style, architecture, and design.
3. Highlight security vulnerabilities or concerns.
4. Suggest cleaner code and maintainability improvements.

Format your answer as a structured report with the following sections (use "None observed" if no findings):
**Bugs or Logical Issues:**
- ...

**Best Practices (Coding Style, Architecture, Design):**
- ...

**Security Vulnerabilities or Concerns:**
- ...

**Cleaner Code & Maintainability Improvements:**
- ...

Below is the diff of changes made in this pull request:

${DIFF}
EOF
)"
        echo "PROMPT=$PROMPT" >> $GITHUB_ENV

    - name: Call OpenAI API
      env:
        OPENAI_API_KEY: ${{ inputs.openai_api_key }}
      run: |
        RESPONSE=$(curl https://api.openai.com/v1/chat/completions \
          -H "Content-Type: application/json" \
          -H "Authorization: Bearer $OPENAI_API_KEY" \
          -d '{
            "model": "'${{ inputs.model }}'",
            "messages": [
              {"role": "system", "content": "You are a super senior tech lead code reviewer."},
              {"role": "user", "content": "'"$PROMPT"'"}
            ],
            "max_tokens": 1500,
            "temperature": 0.3
          }')
        REVIEW=$(echo "$RESPONSE" | jq -r '.choices[0].message.content')
        echo "review=$REVIEW" >> $GITHUB_OUTPUT

inputs:
  base_sha:
    description: "Base SHA of the PR"
    required: true
  head_sha:
    description: "Head SHA of the PR"
    required: true
  openai_api_key:
    description: "OpenAI API Key"
    required: true
  model:
    description: "OpenAI model to use (e.g., gpt-4, gpt-3.5-turbo)"
    required: true

outputs:
  review:
    description: "The AI-generated code review report"